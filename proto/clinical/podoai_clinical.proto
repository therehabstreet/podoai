syntax = "proto3";

package podoai_clinical;
option go_package = "github.com/therehabstreet/podoai/proto/clinical";

import "common/podoai.proto";
import "google/protobuf/timestamp.proto";

// Clinical service definitions go here
service ClinicalService {
    // Clinic APIs
    rpc GetClinic (GetClinicRequest) returns (GetClinicResponse);
    rpc UpdateClinic (UpdateClinicRequest) returns (UpdateClinicResponse);

    // ClinicUser CRUDL APIs
    rpc CreateClinicUser (CreateClinicUserRequest) returns (CreateClinicUserResponse);
    rpc GetClinicUser (GetClinicUserRequest) returns (GetClinicUserResponse);
    rpc UpdateClinicUser (UpdateClinicUserRequest) returns (UpdateClinicUserResponse);
    rpc DeleteClinicUser (DeleteClinicUserRequest) returns (DeleteClinicUserResponse);
    rpc ListClinicUsers (ListClinicUsersRequest) returns (ListClinicUsersResponse);
}

message Clinic {
    string id = 1;
    string name = 2;
    string address = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message ClinicUser {
    string id = 1;
    string name = 2;
    string phone_number = 3;
    repeated podoai.Role roles = 4;
    string clinic_id = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

// Clinic API messages
message GetClinicRequest {
    string clinic_id = 1;
}

message GetClinicResponse {
    Clinic clinic = 1;
}

message UpdateClinicRequest {
    Clinic clinic = 1;
}

message UpdateClinicResponse {
    Clinic clinic = 1;
}

// ClinicUser CRUDL messages
message CreateClinicUserRequest {
    ClinicUser user = 1;
}

message CreateClinicUserResponse {
    ClinicUser user = 1;
}

message GetClinicUserRequest {
    string user_id = 1;
    string clinic_id = 2;
}

message GetClinicUserResponse {
    ClinicUser user = 1;
}

message UpdateClinicUserRequest {
    ClinicUser user = 1;
}

message UpdateClinicUserResponse {
    ClinicUser user = 1;
}

message DeleteClinicUserRequest {
    string user_id = 1;
    string clinic_id = 2;
}

message DeleteClinicUserResponse {
    bool success = 1;
}

message ListClinicUsersRequest {
    string clinic_id = 1;
    int32 page = 2;
    int32 page_size = 3;
}

message ListClinicUsersResponse {
    repeated ClinicUser users = 1;
    int32 total_count = 2;
}

