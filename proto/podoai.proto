syntax = "proto3";

package podoai;
option go_package = "github.com/therehabstreet/podoai/proto";

// Auth service with OTP and login support
service PodoAIService {
  rpc RequestOtp(RequestOtpRequest) returns (RequestOtpResponse);
  rpc VerifyOtp(VerifyOtpRequest) returns (LoginResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
}

// ===== OTP-based Authentication =====
message RequestOtpRequest {
  string mobile_number = 1; // could also be email/username depending on flow
}

message RequestOtpResponse {
  bool success = 1;
  string message = 2;
}

message VerifyOtpRequest {
  string mobile_number = 1;
  string otp = 2;
}

// ===== Classic Authentication =====
message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
}

// ===== Token Validation =====
message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  string user_id = 2;
  string username = 3;
  repeated string roles = 4;
}


