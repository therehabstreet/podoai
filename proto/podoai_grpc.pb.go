// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.31.1
// source: proto/podoai.proto

package podoai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PodoAIService_RequestOtp_FullMethodName    = "/podoai.PodoAIService/RequestOtp"
	PodoAIService_VerifyOtp_FullMethodName     = "/podoai.PodoAIService/VerifyOtp"
	PodoAIService_Login_FullMethodName         = "/podoai.PodoAIService/Login"
	PodoAIService_ValidateToken_FullMethodName = "/podoai.PodoAIService/ValidateToken"
)

// PodoAIServiceClient is the client API for PodoAIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Auth service with OTP and login support
type PodoAIServiceClient interface {
	RequestOtp(ctx context.Context, in *RequestOtpRequest, opts ...grpc.CallOption) (*RequestOtpResponse, error)
	VerifyOtp(ctx context.Context, in *VerifyOtpRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error)
}

type podoAIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPodoAIServiceClient(cc grpc.ClientConnInterface) PodoAIServiceClient {
	return &podoAIServiceClient{cc}
}

func (c *podoAIServiceClient) RequestOtp(ctx context.Context, in *RequestOtpRequest, opts ...grpc.CallOption) (*RequestOtpResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RequestOtpResponse)
	err := c.cc.Invoke(ctx, PodoAIService_RequestOtp_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *podoAIServiceClient) VerifyOtp(ctx context.Context, in *VerifyOtpRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, PodoAIService_VerifyOtp_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *podoAIServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, PodoAIService_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *podoAIServiceClient) ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ValidateTokenResponse)
	err := c.cc.Invoke(ctx, PodoAIService_ValidateToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PodoAIServiceServer is the server API for PodoAIService service.
// All implementations must embed UnimplementedPodoAIServiceServer
// for forward compatibility.
//
// Auth service with OTP and login support
type PodoAIServiceServer interface {
	RequestOtp(context.Context, *RequestOtpRequest) (*RequestOtpResponse, error)
	VerifyOtp(context.Context, *VerifyOtpRequest) (*LoginResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	ValidateToken(context.Context, *ValidateTokenRequest) (*ValidateTokenResponse, error)
	mustEmbedUnimplementedPodoAIServiceServer()
}

// UnimplementedPodoAIServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPodoAIServiceServer struct{}

func (UnimplementedPodoAIServiceServer) RequestOtp(context.Context, *RequestOtpRequest) (*RequestOtpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestOtp not implemented")
}
func (UnimplementedPodoAIServiceServer) VerifyOtp(context.Context, *VerifyOtpRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyOtp not implemented")
}
func (UnimplementedPodoAIServiceServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedPodoAIServiceServer) ValidateToken(context.Context, *ValidateTokenRequest) (*ValidateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateToken not implemented")
}
func (UnimplementedPodoAIServiceServer) mustEmbedUnimplementedPodoAIServiceServer() {}
func (UnimplementedPodoAIServiceServer) testEmbeddedByValue()                       {}

// UnsafePodoAIServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PodoAIServiceServer will
// result in compilation errors.
type UnsafePodoAIServiceServer interface {
	mustEmbedUnimplementedPodoAIServiceServer()
}

func RegisterPodoAIServiceServer(s grpc.ServiceRegistrar, srv PodoAIServiceServer) {
	// If the following call pancis, it indicates UnimplementedPodoAIServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PodoAIService_ServiceDesc, srv)
}

func _PodoAIService_RequestOtp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestOtpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodoAIServiceServer).RequestOtp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PodoAIService_RequestOtp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodoAIServiceServer).RequestOtp(ctx, req.(*RequestOtpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PodoAIService_VerifyOtp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyOtpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodoAIServiceServer).VerifyOtp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PodoAIService_VerifyOtp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodoAIServiceServer).VerifyOtp(ctx, req.(*VerifyOtpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PodoAIService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodoAIServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PodoAIService_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodoAIServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PodoAIService_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodoAIServiceServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PodoAIService_ValidateToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodoAIServiceServer).ValidateToken(ctx, req.(*ValidateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PodoAIService_ServiceDesc is the grpc.ServiceDesc for PodoAIService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PodoAIService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "podoai.PodoAIService",
	HandlerType: (*PodoAIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestOtp",
			Handler:    _PodoAIService_RequestOtp_Handler,
		},
		{
			MethodName: "VerifyOtp",
			Handler:    _PodoAIService_VerifyOtp_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _PodoAIService_Login_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _PodoAIService_ValidateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/podoai.proto",
}
